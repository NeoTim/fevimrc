"=====================================================
" 插件设置
"=====================================================


""" vim-angular
let g:angular_find_ignore = ['build/', 'node_modules/', 'bower_components/', 'dist/']

""" semantic-highlight.vim
" autocmd BufWritePre,BufRead *.js :SemanticHighlight
" let s:semanticGUIColors = ['#1ABC9C', '#61afef', '#c678dd', '#98c379', '#e5c07b', '#d19a66' , '#e06c75', '#56b6c2']


""" cosco.vim
autocmd FileType javascript,css nnoremap <silent> <s-f><s-f> :call cosco#commaOrSemiColon()<CR>

let background_color = "#292c33"
let normal_font_color = "#ABB2BF"

""" vim-airline
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1

""" esformatter
nnoremap <silent> <leader>e :Esformatter<CR>
vnoremap <silent> <leader>e :EsformatterVisual<CR>

""" NERDTree configuration
let g:NERDTreeChDirMode=2
let g:NERDTreeIgnore=['\.rbc$', '\~$', '\.pyc$', '\.db$', '\.sqlite$', '__pycache__']
let g:NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowBookmarks=1
let g:nerdtree_tabs_focus_on_files=1
let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'
let g:NERDTreeWinSize = 20
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite
nnoremap <silent> <F2> :NERDTreeFind<CR>
noremap nt :NERDTreeToggle<CR>


""" Git
noremap <Leader>ga :Gwrite<CR>
noremap <Leader>gc :Gcommit<CR>
noremap <Leader>gsh :Gpush<CR>
noremap <Leader>gll :Gpull<CR>
noremap <Leader>gs :Gstatus<CR>
noremap <Leader>gb :Gblame<CR>
noremap <Leader>gd :Gvdiff<CR>
noremap <Leader>gr :Gremove<CR>


""" syntastic
let g:syntastic_check_on_open=1
let g:syntastic_enable_highlighting=1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" let g:syntastic_javascript_checkers = ['jscs', 'eslint']
" let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_checkers = []
let g:syntastic_html_checkers = []
" let g:syntastic_javascript_checkers = ['jscs']
" let g:syntastic_javascript_checkers = ['jshint']
" let g:syntastic_html_tidy_ignore_errors=[' proprietary attribute \"ng-']
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute " ,"trimming empty <", "unescaped &" , "lacks \"action", "is not recognized!", "discarding unexpected"]


""" ctrlsf
nmap     <C-F>f <Plug>CtrlSFPrompt
vmap     <C-F>f <Plug>CtrlSFVwordPath
vmap     <C-F>F <Plug>CtrlSFVwordExec
nmap     <C-F>n <Plug>CtrlSFCwordPath
nmap     <C-F>p <Plug>CtrlSFPwordPath
nnoremap <C-F>o :CtrlSFOpen<CR>
nnoremap <C-F>t :CtrlSFToggle<CR>
inoremap <C-F>t <Esc>:CtrlSFToggle<CR>


""" vim-expand-region
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)


""" undo-tree
nnoremap <F5> :UndotreeToggle<cr>


""" vim-instant-markdown
set shell=bash\ -i


""" ctrlp
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.pyc,__pycache__
let g:ctrlp_custom_ignore = '\v[\/](node_modules|bower_components|target|dist)|(\.(swp|ico|git|svn))$'
let g:ctrlp_user_command = "find %s -type f | grep -Ev '"+ g:ctrlp_custom_ignore +"'"
let g:ctrlp_use_caching = 0
cnoremap <C-P> <C-R>=expand("%:p:h") . "/" <CR>
noremap <c-b> :CtrlPBuffer<CR>
let g:ctrlp_map = '<c-p>'
let g:ctrlp_open_new_file = 'r'


""" emmet
let g:user_emmet_settings = {
\  'php' : {
\    'extends' : 'html',
\    'filters' : 'c',
\  },
\  'xml' : {
\    'extends' : 'html',
\  },
\  'haml' : {
\    'extends' : 'html',
\  },
\}
let g:user_emmet_expandabbr_key = '<c-e>' "设置为ctrl+e展开


""" Tagbar
nmap tb :TagbarToggle<CR>
vmap tb :TagbarToggle<CR>


""" commentary
nmap cc gcc
vmap cc gcc


""" javascript-libraries-syntax.vim
let g:used_javascript_libs = 'jquery,underscore,angularjs,angularui,requirejs'


""" csscomb-for-vim
nmap <Leader>c :CSScomb<cr>
vmap <Leader>c :CSScomb<cr>
" Map bc to run CSScomb. bc stands for beautify css
autocmd FileType css noremap <buffer> <leader>bc :CSScomb<CR>
" Automatically comb your CSS on save
autocmd BufWritePre,FileWritePre *.css,*.less,*.scss,*.sass silent! :CSScomb<CR>


""" vim-autoformat
map <leader>f :Autoformat<cr>


""" easymotion
let g:EasyMotion_leader_key='<space>'


""" UltiSnips
let g:UltiSnipsExpandTrigger="<CR>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
nmap <Leader>u :UltiSnipsEdit<cr>
vmap <Leader>u :UltiSnipsEdit<cr>

let g:UltiSnipsEditSplit="vertical"

""" YouCompleteMe
let g:neobundle#install_process_timeout = 1500
nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
